#
##
###
####
##### Code for Dissertation 
######

setwd("C:/Users/Solom/OneDrive/Documents/Project Data/")

# Loading in the different files
phenotypes = read.table ("ind.sorted.phe.txt")
map <- read.table ("map.sorted.txt")
genotype <- read.table ("all.vcf.sorted.txt")
parents <- read.table ("fvcfAll.txt")
phenotypes[1:10,1:10]

iix <- which(phenotypes[, "Longevity_HET3_ITP"] > 600)
phenotypes <- phenotypes[iix, ]

Y <- phenotypes[, "Longevity_HET3_ITP"]
sex <- phenotypes[, "Sex"]
site <-phenotypes[, "Site"]
cohort <- as.factor(phenotypes[, "Cohort.Year"])
treatment <- as.factor(phenotypes[, "Treatment_Effect"])

lm(Y ~ sex) ..... #null model

lm(Y ~ sex + 0)
m1 <- lm(Y ~ sex + 0)
m2 <- lm(Y ~ sex + site + 0)
AIC(m1,m2)
#model2 is better because it has -67.73 difference

m3 <- lm(Y ~ sex + site + cohort + 0)
AIC(m2,m3)

#model3 is better because there is -11 difference

m4 <- lm(Y ~ sex + site + cohort + treatment + 0)
AIC(m3,m4)

#model 4 is better because it has a difference of 80

forpie <- anova(lm(Y ~ sex + site + cohort + treatment ))
pie(forpie[,"Sum Sq"] / sum(forpie[,"Sum Sq"]))

round(100 * (forpie[,"Sum Sq"] / sum(forpie[,"Sum Sq"])), 1)
pch <- round(100 * (forpie[,"Sum Sq"] / sum(forpie[,"Sum Sq"])), 1)
names(pch) <- c("Sex", "Site", "Cohort", "Treatment", "Unknown")
pie(pch)

m5 <- lm(Y ~ sex + site + cohort + treatment + sex:site + 0)
AIC(m4,m5) 
#model5 is better because 23 difference

m6 <- (lm(Y ~ sex + site + cohort + treatment + sex:site + sex:cohort + 0))
AIC(m5,m6)

# model 5 is still a beter option, because it has a lower AIC than model 6

m6 <- (lm(Y ~ sex + site + cohort + treatment + sex:site + site:cohort + cohort:treatment + 0))
AIC(m5,m6)

# model 6 is the best model for the mice that lives for more than 600 days

setwd("C:/Users/Solom/OneDrive/Documents/Project Data/")

# Loading in the different files
phenotypes <- read.table ("ind.sorted.phe.txt")
iix <- which(phenotypes[, "Longevity_HET3_ITP"] > 600)
phenotypes <- phenotypes[iix, ]
map <- read.table ("map.sorted.txt")
genotype <- read.table ("all.vcf.sorted.txt")
parents <- read.table ("fvcfAll.txt")
map <- cbind(map, PosName = paste(map[, "Chr"], map [, "Position"],sep="_"))
phaplo <- read.table ("pHaplo.txt",  sep = "\t")


phenotypes[1:5,1:5]
genotype[1:5,1:5]
parents[1:5,1:5]
map[1:3,1:3]


phenotypes[1:5, ]
table(phenotypes[, "Cohort.Year"])
table(phenotypes[, "Site"])

table(phenotypes[which(phenotypes[, "Site"] == "UM"), "Cohort.Year"])
table(phenotypes[which(phenotypes[, "Site"] == "UT"), "Cohort.Year"])
table(phenotypes[which(phenotypes[, "Site"] == "JL"), "Cohort.Year"])

plot(table(phenotypes[which(phenotypes[, "Site"] == "UM"), "Cohort.Year"]), xlab = "Cohort Year", ylab = "Mice Population", pch = 3, main = "Mice Population in Site UM")
plot(table(phenotypes[which(phenotypes[, "Site"] == "UT"), "Cohort.Year"]), xlab = "Cohort Year", ylab = "Mice Population", pch = 3, main = "Mice Population in Site UT")
plot(table(phenotypes[which(phenotypes[, "Site"] == "JL"), "Cohort.Year"]), xlab = "Cohort Year", ylab = "Mice Population", pch = 3, main = "Mice Population in Site JL")

Male <- which(phenotypes[, "Sex"] == "M")
Female <- which(phenotypes[, "Sex"] == "F")

length(Male)
length(Female)

UMP <- which(phenotypes[,"Site"] == "UM")
UTP <- which(phenotypes[,"Site"] == "UT")
JLP <- which(phenotypes[,"Site"] == "JL")

hist(phenotypes[UMP, "Longevity_HET3_ITP"])
hist(phenotypes[UTP, "Longevity_HET3_ITP"])
hist(phenotypes[JLP, "Longevity_HET3_ITP"])

MaleUM <- which(phenotypes[, "Site"] == "UM", phenotypes["Sex"] == "M")
FemaleUM <- which(phenotypes[,"Site"] == "UM", phenotypes[, "Sex"] == "F")
MaleUT <- which(phenotypes[,"Site"] == "UT", phenotypes[, "Sex"] == "M")
FemaleUT <- which(phenotypes[,"Site"] == "UT", phenotypes[, "Sex"] == "F")
MaleJL <- which(phenotypes[,"Site"] == "JL", phenotypes[, "Sex"] == "M")
FemaleJL <- which(phenotypes[,"Site"] == "JL", phenotypes[, "Sex"] == "F")


MaleUM <- which(phenotypes[,"Site"] == "UM" & phenotypes[,"Sex"] == "M")
length(MaleUM)
FemaleUM <- which(phenotypes[,"Site"] == "UM" & phenotypes[,"Sex"] == "F")
length(FemaleUM)

length(UMP)

MaleUT <- which(phenotypes[,"Site"] == "UT" & phenotypes[,"Sex"] == "M")
length(MaleUT)
FemaleUT <- which(phenotypes[,"Site"] == "UT" & phenotypes[,"Sex"] == "F")
length(FemaleUT)

length(UTP)

MaleJL <- which(phenotypes[,"Site"] == "JL" & phenotypes[,"Sex"] == "M")
length(MaleJL)
FemaleJL <- which(phenotypes[,"Site"] == "JL" & phenotypes[,"Sex"] == "F")
length(FemaleJL)

length(JLP)

MaleUM <- which(phenotypes[,"Site"] == "UM" & phenotypes[,"Sex"] == "M")
length(MaleUM)
FemaleUM <- which(phenotypes[,"Site"] == "UM" & phenotypes[,"Sex"] == "F")
length(FemaleUM)

length(UMP)

MaleUT <- which(phenotypes[,"Site"] == "UT" & phenotypes[,"Sex"] == "M")
length(MaleUT)
FemaleUT <- which(phenotypes[,"Site"] == "UT" & phenotypes[,"Sex"] == "F")
length(FemaleUT)

length(UTP)

MaleJL <- which(phenotypes[,"Site"] == "JL" & phenotypes[,"Sex"] == "M")
length(MaleJL)
FemaleJL <- which(phenotypes[,"Site"] == "JL" & phenotypes[,"Sex"] == "F")
length(FemaleJL)

length(JLP)

table(phenotypes[MaleUM, "Cohort.Year"])
hist(phenotypes[MaleUM, "Cohort.Year"], xlab = "Cohort Year", ylab = "Male Population", main = "Male Mice Population at UM that lives for more than 600 days")
table(phenotypes[FemaleUM, "Cohort.Year"])
hist(phenotypes[FemaleUM, "Cohort.Year"], xlab = "Cohort Year", ylab = "Female Population", main = "Female Mice Population at UM that lives for more than 600 days")
table(phenotypes[MaleUT, "Cohort.Year"])
hist(phenotypes[MaleUT, "Cohort.Year"], xlab = "Cohort Year", ylab = "Male Population", main = "Male Mice Population at UT that lives for more than 600 days")
table(phenotypes[FemaleUT, "Cohort.Year"])
hist(phenotypes[FemaleUT, "Cohort.Year"], xlab = "Cohort Year", ylab = "Female Population", main = "Female Mice Population at UT that lives for more than 600 days")
table(phenotypes[MaleJL, "Cohort.Year"])
hist(phenotypes[MaleJL, "Cohort.Year"], xlab = "Cohort Year", ylab = "Male Population", main = "Male Mice Population at JL that lives for more than 600 days")
table(phenotypes[FemaleJL, "Cohort.Year"])
hist(phenotypes[FemaleJL, "Cohort.Year"], xlab = "Cohort Year", ylab = "Female Population", main = "Female Mice Population at JL that lives for more than 600 days")

mean(MaleUM)
mode(phenotypes[MaleUM, "Cohort.Year"])
mean(phenotypes[MaleUM, "Cohort.Year"])
median(phenotypes[MaleUM, "Cohort.Year"])

plot(phenotypes[, "Longevity_HET3_ITP"] ~ phenotypes[, "Cohort.Year"])
plot(phenotypes[, "Longevity_HET3_ITP"] ~ phenotypes[, "Cohort.Year"])

boxplot(phenotypes[, "Longevity_HET3_ITP"] ~ phenotypes[, "Cohort.Year"], col = c("limegreen", "blue", "orange", "hotpink", "yellow", "gray", "green"))

setwd("C:/Users/Solom/OneDrive/Documents/Project Data/")
# Loading in the different files
phenotypes <- read.table ("ind.sorted.phe.txt")
iix <- which(phenotypes[, "Longevity_HET3_ITP"] > 600)
phenotypes <- phenotypes[iix, ]
map <- read.table ("map.sorted.txt")
genotype <- read.table ("all.vcf.sorted.txt")
parents <- read.table ("fvcfAll.txt")
map <- cbind(map, PosName = paste(map[, "Chr"], map [, "Position"],sep="_"))

# pGTS is a vector of length 4

ConversionPP <- function(pGTS){

if(pGTS[1] == "1/1" && pGTS[2] == "0/0" && pGTS[3] == "0/0" && pGTS[4] == "0/0"){
  return(c("B?", "A?", "X"))
}

 if(pGTS[1] == "0/0" && pGTS[2] == "1/1" && pGTS[3] == "0/0" && pGTS[4] == "0/0"){
    return(c("A?", "B?", "X"))
}

if(pGTS[1] == "0/0" && pGTS[2] == "0/0" && pGTS[3] == "1/1" && pGTS[4] == "0/0"){
  return(c("?D", "?C", "X"))
}

if(pGTS[1] == "0/0" && pGTS[2] == "0/0" && pGTS[3] == "0/0" && pGTS[4] == "1/1"){
  return(c("?C", "?D", "X"))
}

if(pGTS[1] == "1/1" && pGTS[2] == "1/1" && pGTS[3] == "0/0" && pGTS[4] == "0/0"){
  return(c("X", "??", "X"))
}

if(pGTS[1] == "0/0" && pGTS[2] == "1/1" && pGTS[3] == "1/1" && pGTS[4] == "0/0"){
  return(c("AD", "??", "BC"))
}

if(pGTS[1] == "0/0" && pGTS[2] == "0/0" && pGTS[3] == "1/1" && pGTS[4] == "1/1"){
  return(c("X", "??", "X"))
}

if(pGTS[1] == "1/1" && pGTS[2] == "0/0" && pGTS[3] == "1/1" && pGTS[4] == "0/0"){
  return(c("BD", "??", "AC"))
}

if(pGTS[1] == "0/0" && pGTS[2] == "1/1" && pGTS[3] == "0/0" && pGTS[4] == "1/1"){
    return(c("AC", "??", "BD"))
}

if(pGTS[1] == "1/1" && pGTS[2] == "0/0" && pGTS[3] == "0/0" && pGTS[4] == "1/1"){
    return(c("BC", "BD", "AD"))
}

if(pGTS[1] == "0/0" && pGTS[2] == "1/1" && pGTS[3] == "0/0" && pGTS[4] == "0/0"){
    return(c("A?", "B?", "X"))
}

if(pGTS[1] == "0/0" && pGTS[2] == "1/1" && pGTS[3] == "1/1" && pGTS[4] == "1/1"){
    return(c("X", "A?", "B?"))
}

if(pGTS[1] == "1/1" && pGTS[2] == "0/0" && pGTS[3] == "1/1" && pGTS[4] == "1/1"){
    return(c("X", "B?", "A?"))
}

if(pGTS[1] == "1/1" && pGTS[2] == "1/1" && pGTS[3] == "0/0" && pGTS[4] == "1/1"){
    return(c("X", "?C", "?D"))
}

if(pGTS[1] == "1/1" && pGTS[2] == "1/1" && pGTS[3] == "1/1" && pGTS[4] == "0/0"){
    return(c("X", "?D", "?C"))
}

}
 
ConversionPP(parents[1, 6:9])
rr <- c()
for(x in 1:nrow(parents)){
    #Every time for each element
    r <- ConversionPP(parents[x, 6:9])
  rr <- rbind(rr, r)
}

parents <- cbind(parents, rr)	
parents <- cbind(parents, "NA" = "")

colnames(parents)[10:12] <- c("0/0", "0/1", "1/1")

genotype[1, ]
rr <- c()
for(x in 1:nrow(genotype)){
	inm <- rownames(genotype)[x] # marker
	minp <- map[inm, "PosName"] # convert from name to chr_position
	gt <- as.character(genotype[x, ])
	gt[is.na(gt)] <- "NA"
	r <- as.character(parents[minp, gt])
	rr <- rbind (rr,r)
}


colnames(rr) <- colnames(genotype)
rownames(rr) <- rownames(genotype)
write.table(rr, "pHaplo600.txt", sep="\t", quote=FALSE)

# Data Analysis part 8
setwd("C:/Users/Solom/OneDrive/Documents/Project Data/")

# Loading in the different files
phenotypes <- read.table ("ind.sorted.phe.txt")
iix <- which(phenotypes[, "Longevity_HET3_ITP"] > 600)
phenotypes <- phenotypes[iix, ]
map <- read.table ("map.sorted.txt")
map <- cbind(map, PosName = paste(map[, "Chr"], map [, "Position"],sep="_"))
haplo <- read.table("pHaplo600.txt",  sep = "\t")
haplo[1:10,1:10]
haplo <- read.table("pHaplo600.txt",  sep = "\t", na.strings = "", colClasses ="character")
haplo[1:10,1:10]


for(x in 1:nrow(haplo)){ 
	mname <- rownames(haplo)[x]
	if(x != nrow(haplo)){
		mnext <- rownames(haplo) [x+1]
		map[mname,]
		map[mnext,]
	}
}
map[mname,]
map[mnext,]


# Merging 2 markers into 1 if they are in the same Position
haploNDM <- c()

for(x in  1:nrow(haplo)){ 
	mname <- rownames(haplo)[x]
	if(x != nrow(haplo)){
		mnext <- rownames(haplo)[x+1]
		if(map[mname, "PosName"] != map[mnext, "PosName"]){
			haploNDM <- rbind(haploNDM, haplo[x,])
			}
		}
	cat("Scanning",x,"\n")
}


# Merging 2 markers into 1 if they are in the same Position and  skipping to the next marker after merge
haploNDM <- c()
x <- 1
while(x < nrow(haplo)){ 
	mname <- rownames(haplo)[x]
	if(x != nrow(haplo)){
		mnext <- rownames(haplo)[x+1]
		if(map[mname, "PosName"] != map[mnext, "PosName"]){
			haploNDM <- rbind(haploNDM, haplo[x,])
			x <- x + 1
		}else{
			# we know x and x+1 are the same markers
			newM <- haplo[x,]
			iix <- which (is.na(newM))
			newM [iix] <- haplo[x + 1,iix]
			haploNDM <- rbind(haploNDM, newM)
			x <- x+ 2
		}
	}
	cat("Scanning",x,"\n")
}
 
#Picking the last unique marker 
haploNDM <- c()
x <- 1
while(x <= nrow(haplo)){ 
	mname <- rownames(haplo)[x]
	if(x != nrow(haplo)){
		mnext <- rownames(haplo)[x+1]
		if(map[mname, "PosName"] != map[mnext, "PosName"]){
			haploNDM <- rbind(haploNDM, haplo[x,])
			x <- x + 1
		}else{
			# we know x and x+1 are the same markers
			newM <- haplo[x,]
			iix <- which (is.na(newM))
			newM [iix] <- haplo[x + 1,iix]
			haploNDM <- rbind(haploNDM, newM)
			x <- x+ 2
		}
	}else{
		haploNDM <- rbind(haploNDM, haplo[x,])
			x <- x + 1
		}
	cat("Scanning",x,"\n")
}


write.table(haploNDM, "haplotypes_uniques_600.txt", sep = "\t", quote=FALSE, na = "")


part 8 continued
setwd("C:/Users/Solom/OneDrive/Documents/Project Data/")

# Loading in the different files
phenotypes <- read.table ("ind.sorted.phe.txt")
iix600 <- which(phenotypes[, "Longevity_HET3_ITP"] > 600)
phenotypes <- phenotypes[iix600, ]
map <- read.table ("map.sorted.txt")
map <- cbind(map, PosName = paste(map[, "Chr"], map [, "Position"],sep="_"))
haplo <- read.table("haplotypes_uniques_600.txt",  sep = "\t", na.strings = "", colClasses ="character")
haplo[1:10,1:10]


haplo[haplo == "??"] <- NA
haplo[haplo == "X"] <- NA
haplo[haplo == "AC"] <- 1
haplo[haplo == "BC"] <- 2
haplo[haplo == "AD"] <- 3
haplo[haplo == "BD"] <- 4
haplo[haplo == "A?"] <- 5
haplo[haplo == "B?"] <- 6
haplo[haplo == "?C"] <- 7
haplo[haplo == "?D"] <- 8


mArranged <- map[rownames(haplo), c("Chr", "Position")] 
mArranged[, "Position"] <- as.numeric(mArranged[, "Position"]) / 1000000
mPrep <- cbind(mArranged,haplo)
pArranged <- t(phenotypes[, c("Sex", "Site", "Cohort.Year", "Treatment_Effect", "Longevity_HET3_ITP")])
pArranged <- cbind(NA,NA,pArranged)
pArranged["Longevity_HET3_ITP", ] <- as.numeric(pArranged["Longevity_HET3_ITP", ])


write.table(pArranged, "Cross600.csvr", sep = "," ,quote = FALSE, na = "" , col.names = FALSE)
write.table(mPrep, "Cross600.csvr" ,sep = "," ,quote = FALSE, na = "", append = TRUE, col.names = FALSE)

library(qtl)
rQTLmap <- read.cross("csvr", file = "Cross600.csvr", genotypes = NULL, estimate.map = FALSE, convertXdata= FALSE)

rQTLfilled <- fill.geno(rQTLmap, method = "maxmarginal", min.prob = 0.80)

mgeno <- pull.geno(rQTLfilled)
rownames(mgeno) <- colnames(haplo)
write.table(t(mgeno), "fille_geno600.txt", sep = "\t", quote=FALSE)

genoprob <- calc.genoprob(rQTLmap)
gtsPM <- pull.genoprob(genoprob)

rownames(gtsPM) = colnames(haplo)
write.table(gtsPM, "gtsPM600.txt", sep ="\t", quote = FALSE)

setwd("C:/Users/Solom/OneDrive/Documents/Project Data/")
# Loading in the different files
phenotypes <- read.table ("ind.sorted.phe.txt") # map for 600 days
iix600 <- which(phenotypes[, "Longevity_HET3_ITP"] > 600)
phenotypes <- phenotypes[iix600, ]
map <- read.table ("map.sorted.txt")
map <- cbind(map, PosName = paste(map[, "Chr"], map [, "Position"],sep="_"))
gtsPM <- read.table("gtsPM.txt", sep = "\t", check.names=FALSE) # maps for 600 days
gtsPM <- read.table("gtsPM.txt", sep = "\t", check.names=FALSE)

gtsPM <- gtsPM[rownames(phenotypes), ] # subset using the rownames of the genotypes that are left

# fix for the map not matching to the genotypes after merging markers and imputation
MingtsPM <- unique(unlist(lapply(strsplit(colnames(gtsPM), ":"), "[", 1)))
map <- map[MingtsPM, ]

# Pull out the phenotypes
Y <- phenotypes[, "Longevity_HET3_ITP"]
sex <- phenotypes[, "Sex"]
site <- phenotypes[, "Site"]
cohort <- as.factor(phenotypes[, "Cohort.Year"])
treatment <- as.factor(phenotypes[, "Treatment_Effect"])

# Check the ordering between phenotypes and gtsPM
all(rownames(phenotypes) == rownames(gtsPM))

mnull <- lm(Y ~ sex + site + cohort + treatment + sex:site + site:cohort + cohort:treatment + 0)

pvals <- c()
for(marker in MingtsPM){
  iix <- grep(marker, colnames(gtsPM))
  gts <- as.matrix(gtsPM[, iix])
  mfull <- lm(Y ~ sex + site + cohort + treatment + sex:site + site:cohort + cohort:treatment + gts + 0)
  pM <- as.numeric(na.omit(anova(mnull,mfull)[, "Pr(>F)"]))
  pvals <- c(pvals, pM)
}

threshold5 <- -log10(0.05 / length(MingtsPM))
threshold1 <- -log10(0.01 / length(MingtsPM))
threshold01 <- -log10(0.001 / length(MingtsPM))

map[map[, "Chr"] == "X", "Chr"] <- 20
chrI <- 2 - as.numeric(map[, "Chr"]) %% 2

chr.length <- c()
for(x in 1:20){
  iim <- which(map[, "Chr"] == x)
  chr.length <- c(chr.length, max(map[iim, "Position"]))
}

map <- cbind(map, cumPos = NA)
pos <- 0
chr.mids <- c()
for(x in 1:20){
  iim <- which(map[, "Chr"] == x)
  map[iim, "cumPos"] <- pos + map[iim, "Position"]
  chr.mids <- c(chr.mids, pos + .5 * chr.length[x])
  pos <- pos + chr.length[x] + 30000000
}

plot(x = map[, "cumPos"], y = -log10(pvals), col = c("black", "orange")[chrI], pch = 19, xaxt = "n", xlab = "Chromosome", las = 2, main = "QTL mapping on longevity in UM-HET3 Mice that live for more than 600 days")
i <- 1
for(x in 1:20){
  iim <- which(map[, "Chr"] == x)
  points(x = map[iim, "cumPos"], y = -log10(pvals[iim]), t = 'l', col = c("black", "orange")[i])
  i <- i + 1
  if(i > 2) i <- 1
}
abline(h = threshold5, col = "red", lty = 2)
abline(h = threshold1, col = "orange", lty = 2)
abline(h = threshold01, col = "green", lty = 2)
axis(1, at = chr.mids, c(1:19, "X"))
legend("topleft", c("0.1%", "1%", "5%"), lty = 2, col =c("green", "orange", "red"), title = "Bonferonni Threshold")

# Generating QTL Maps

setwd("C:/Users/Solom/OneDrive/Documents/Project Data/")

# Loading in the different files
phenotypes <- read.table ("ind.sorted.phe.txt")
iix600 <- which(phenotypes[, "Longevity_HET3_ITP"] > 600)
phenotypes <- phenotypes[iix600, ]


map <- read.table ("map.sorted.txt")
map <- cbind(map, PosName = paste(map[, "Chr"], map [, "Position"],sep="_"))
gtsPM <- read.table("gtsPM.txt", sep = "\t", check.names=FALSE)

gtsPM <- gtsPM[rownames(phenotypes), ] # subset using the rownames of the genotypes that are left


# fix for the map not matching to the genotypes after merging markers and imputation
MingtsPM <- unique(unlist(lapply(strsplit(colnames(gtsPM), ":"), "[", 1)))
map <- map[MingtsPM, ]

# Pull out the phenotypes
Y <- phenotypes[, "Longevity_HET3_ITP"]
sex <- phenotypes[, "Sex"]
site <- phenotypes[, "Site"]
cohort <- as.factor(phenotypes[, "Cohort.Year"])
treatment <- as.factor(phenotypes[, "Treatment_Effect"])

# Check the ordering between phenotypes and gtsPM
all(rownames(phenotypes) == rownames(gtsPM))

mnull <- lm(Y ~ sex + site + cohort + treatment + sex:site + site:cohort + cohort:treatment + 0)

# empty vector
adjusted <- rep(NA, length (Y))
# value after adjustment
adj <- residuals(mnull)
#values adjusted + mean longevity
adjusted[as.numeric(names(adj))] <- adj + mean(Y)

adjusted [1:10]


pvals <- c()
for(marker in MingtsPM){
  iix <- grep(marker, colnames(gtsPM))
  gts <- as.matrix(gtsPM[, iix])
  mfull <- lm(Y ~ sex + site + cohort + treatment + sex:site + site:cohort + cohort:treatment + gts + 0)
  pM <- as.numeric(na.omit(anova(mnull,mfull)[, "Pr(>F)"]))
  pvals <- c(pvals, pM)
}

threshold5 <- -log10(0.05 / length(MingtsPM))
threshold1 <- -log10(0.01 / length(MingtsPM))
threshold01 <- -log10(0.001 / length(MingtsPM))

map[map[, "Chr"] == "X", "Chr"] <- 20
chrI <- 2 - as.numeric(map[, "Chr"]) %% 2

chr.length <- c()
for(x in 1:20){
  iim <- which(map[, "Chr"] == x)
  chr.length <- c(chr.length, max(map[iim, "Position"]))
}

map <- cbind(map, cumPos = NA)
pos <- 0
chr.mids <- c()
for(x in 1:20){
  iim <- which(map[, "Chr"] == x)
  map[iim, "cumPos"] <- pos + map[iim, "Position"]
  chr.mids <- c(chr.mids, pos + .5 * chr.length[x])
  pos <- pos + chr.length[x] + 30000000
}

plot(x = map[, "cumPos"], y = -log10(pvals), col = c("black", "orange")[chrI], pch = 19, xaxt = "n", xlab = "Chromosome", las = 2, main = "QTL mapping on longevity in UM-HET3 Mice that lives more than 600 days")
i <- 1
for(x in 1:20){
  iim <- which(map[, "Chr"] == x)
  points(x = map[iim, "cumPos"], y = -log10(pvals[iim]), t = 'l', col = c("black", "orange")[i])
  i <- i + 1
  if(i > 2) i <- 1
}
abline(h = threshold5, col = "red", lty = 2)
abline(h = threshold1, col = "orange", lty = 2)
abline(h = threshold01, col = "green", lty = 2)
axis(1, at = chr.mids, c(1:19, "X"))
legend("topleft", c("0.1%", "1%", "5%"), lty = 2, col =c("green", "orange", "red"), title = "Bonferonni Threshold")

cbind(map, LOD = -log10(pvals))

gtsFilled <- read.table("fille_geno.txt")
gtsFilled <- gtsPM[rownames(adjusted), ]

aa <-  boxplot(adjusted ~ unlist(gtsFilled["1_116455004", ]))
round(aa$stats[3,],0)

install.packages("vioplot")
#install a vioplot


library(vioplot)
#make a violin plot

vioplot(adjusted ~ unlist(gtsFilled["1_116455004", ]),
	xaxt = "n", xlab = "Haplotype", las = 2, ylab = "Adjusted Longevity (days)",
	col = c("green", "blue", "orange", "hotpink"), main = "Longevity effect on Haplotypes", sub = "Markers at 1_116455004")
axis(1, at  = 1:4, c("A|C", "A|D", "B|C", "B|D"))

aa1 <-  boxplot(adjusted ~ unlist(gtsFilled["1_139314660", ]))
round(aa1$stats[3,],0)
aa2 <-  boxplot(adjusted ~ unlist(gtsFilled["1_170885169", ]))
round(aa2$stats[3,],0)
aa3 <-  boxplot(adjusted ~ unlist(gtsFilled["3_159581164", ]))
round(aa3$stats[3,],0)
aa4 <-  boxplot(adjusted ~ unlist(gtsFilled["4_155785470", ]))
round(aa4$stats[3,],0)
aa5 <-  boxplot(adjusted ~ unlist(gtsFilled["6_114480547", ]))
round(aa5$stats[3,],0)
aa6 <-  boxplot(adjusted ~ unlist(gtsFilled["7_3162282", ]))
round(aa6$stats[3,],0)
aa7 <-  boxplot(adjusted ~ unlist(gtsFilled["7_42299841", ]))
round(aa7$stats[3,],0)
aa8 <-  boxplot(adjusted ~ unlist(gtsFilled["7_139640399", ]))
round(aa8$stats[3,],0)
aa9 <-  boxplot(adjusted ~ unlist(gtsFilled["8_129072461", ]))
round(aa9$stats[3,],0)
aa10 <-  boxplot(adjusted ~ unlist(gtsFilled["10_13167814", ]))
round(aa10$stats[3,],0)
aa11 <-  boxplot(adjusted ~ unlist(gtsFilled["12_34390148", ]))
round(aa11$stats[3,],0)
aa12 <-  boxplot(adjusted ~ unlist(gtsFilled["14_73006995", ]))
round(aa12$stats[3,],0)
aa13 <-  boxplot(adjusted ~ unlist(gtsFilled["17_17733625", ]))
round(aa13$stats[3,],0)
aa14 <-  boxplot(adjusted ~ unlist(gtsFilled["18_70827264", ]))
round(aa14$stats[3,],0)

# Biomart 

setwd("C:/Users/Solom/OneDrive/Documents/Project Data/")

mr <- read.table("data600.txt", sep ="\t")
regions <- mr[, c(2,3,5)]
colnames(regions) <- c("Chr", "Proximal", "Distal")
regions

#Load the package and the correct version of the mouse genome
library(biomaRt)
bio.mart <- useMart("ENSEMBL_MART_ENSEMBL", host="https://nov2020.archive.ensembl.org", dataset="mmusculus_gene_ensembl")

listAttributes(bio.mart)[1:50,]
listFilters(bio.mart)[1:50,]

filter = c("chromosomal_region", "biotype")
attributes = c("ensembl_gene_id", "mgi_symbol", "mgi_description", "gene_biotype", "chromosome_name", "start_position", "end_position")

for(i in 1:nrow(regions)){
	r = paste0(regions[i, "Chr"], ":", regions[i, "Proximal"], ":", regions[i, "Distal"])
	
	value = list (r, "protein_coding")
	
	pcg <- getBM(attributes, filter, value, bio.mart)
	iix <- grep("predicted",pcg[, "mgi_description"])
	if(length(iix) > 0) pcg <- pcg[-iix, ]
	iix <- grep("RIKEN cDNA",pcg[, "mgi_description"])
	if(length(iix) > 0) pcg <- pcg[-iix, ]
	write.table(pcg, file = paste0("PCG_600_",gsub(":", "_",r), ".txt"), sep = "\t", quote=FALSE, row.names=FALSE)
}





